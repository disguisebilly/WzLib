[
    uuid(D15C6042-5770-4007-8608-EBF3A1ED8083),
    version(1.0)
]
library WzLib
{
    importlib("stdole2.tlb");
    import "IWzGr2DLayer.idl";

    [
        object,
        uuid(6DC8C7CE-8E81-4420-B4F6-4B60B7D5FCDF)
    ]
    interface IWzGr2DLayer_DX9 : IWzVector2D {
        [propget] HRESULT z([out, retval] INT* pnZ);
        [propput] HRESULT z([in] INT nZ);
        [propget] HRESULT width([out, retval] INT* pnWidth);
        [propput] HRESULT width([in] INT nWidth);
        [propget] HRESULT height([out, retval] INT* pnHeight);
        [propput] HRESULT height([in] INT nHeight);
        [propget] HRESULT lt([out, retval] IWzVector2D** ppVector);
        [propget] HRESULT rb([out, retval] IWzVector2D** ppVector);
        HRESULT InterLockedOffset([in] INT xlt, [in] INT ylt, [in] INT xrb, [in] INT yrb);
        [propget] HRESULT flip([out, retval] INT* pnFlip);
        [propput] HRESULT flip([in] INT nFlip);
        [propget] HRESULT color([out, retval] UINT* puColor);
        [propput] HRESULT color([in] UINT uColor);
        [propget] HRESULT alpha([out, retval] IWzVector2D** ppVector);
        [propget] HRESULT redTone([out, retval] IWzVector2D** ppVector);
        [propget] HRESULT greenBlueTone([out, retval] IWzVector2D** ppVector);
        [propget] HRESULT blend([out, retval] LAYER_BLENDTYPE* pnBlend);
        [propput] HRESULT blend([in] LAYER_BLENDTYPE nblend);
        [propget] HRESULT overlay([out, retval] VARIANT* pvLayer);
        [propput] HRESULT overlay([in] VARIANT vLayer);
        [propget] HRESULT canvas([in, optional] VARIANT vIndex, [out, retval] IWzCanvas** ppCanvas);
        HRESULT InsertCanvas([in] IWzCanvas* pCanvas, [in, optional] VARIANT vDelay, [in, optional] VARIANT vAlpha0, [in, optional] VARIANT vAlpha1, [in, optional] VARIANT vZoom0, [in, optional] VARIANT vZoom1, [out, retval] VARIANT* pvIndex);
        HRESULT RemoveCanvas([in, optional] VARIANT vIndex, [out, retval] IWzCanvas** ppCanvas);
        HRESULT ShiftCanvas([in, optional] VARIANT vValue);
        HRESULT Animate([in] GR2D_ANITYPE nType, [in, optional] VARIANT vDelayRate, [in, optional] VARIANT vRepeat);
        [propget] HRESULT animationState([out, retval] INT* pnState);
        [propget] HRESULT visible([out, retval] INT* pnVisible);
        [propput] HRESULT visible([in] INT nVisible);
    };
};